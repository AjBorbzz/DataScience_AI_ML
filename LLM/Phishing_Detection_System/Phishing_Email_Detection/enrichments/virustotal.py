import os
import time
import requests
from dotenv import load_dotenv

load_dotenv()

VT_API_KEY = os.getenv("VIRUSTOTAL_API_KEY")
VT_URL = "https://www.virustotal.com/api/v3/urls"

HEADERS = {
    "accept": "application/json",
    "x-apikey": VT_API_KEY,
    "content-type": "application/x-www-form-urlencoded"
}

def vt_scan_url(url):
    payload = {"url": url}
    response = requests.post(VT_URL, data=payload, headers=HEADERS)
    response.raise_for_status()
    return response.json()["data"]["id"]

sample_output = """
{'data': {'id': 'ae6dd44356905103b4618a88026bf971102129ca3f53f7c68530b4a924912f90', 
          'type': 'url', 
          'links': {'self': 'https://www.virustotal.com/api/v3/urls/ae6dd44356905103b4618a88026bf971102129ca3f53f7c68530b4a924912f90'}, 
          'attributes': {'last_submission_date': 1748435343, 
                         'times_submitted': 21190, 
                         'last_http_response_content_length': 3051780, 
                         'total_votes': {'harmless': 22, 'malicious': 2}, 
                         'last_analysis_results': {'Artists Against 419': {'method': 'blacklist', 
                                                                           'engine_name': 'Artists Against 419', 
                                                                           'category': 'harmless', 
                                                                           'result': 'clean'}, 
                                                     'Acronis': {'method': 'blacklist', 
                                                     'engine_name': 'Acronis', 'category': 'harmless', 'result': 'clean'}, 
                                                     'Abusix': {'method': 'blacklist', 'engine_name': 'Abusix', 'category': 'harmless', 'result': 'clean'}, 'ADMINUSLabs': {'method': 'blacklist', 'engine_name': 'ADMINUSLabs', 'category': 'harmless', 'result': 'clean'}, 'Lionic': {'method': 'blacklist', 'engine_name': 'Lionic', 'category': 'harmless', 'result': 'clean'}, 'Criminal IP': {'method': 'blacklist', 'engine_name': 'Criminal IP', 'category': 'harmless', 'result': 'clean'}, 'AILabs (MONITORAPP)': {'method': 'blacklist', 'engine_name': 'AILabs (MONITORAPP)', 'category': 'harmless', 'result': 'clean'}, 'AlienVault': {'method': 'blacklist', 'engine_name': 'AlienVault', 'category': 'harmless', 'result': 'clean'}, 'alphaMountain.ai': {'method': 'blacklist', 'engine_name': 'alphaMountain.ai', 'category': 'undetected', 'result': 'unrated'}, 'AlphaSOC': {'method': 'blacklist', 'engine_name': 'AlphaSOC', 'category': 'undetected', 'result': 'unrated'}, 'Antiy-AVL': {'method': 'blacklist', 'engine_name': 'Antiy-AVL', 'category': 'harmless', 'result': 'clean'}, 'ArcSight Threat Intelligence': {'method': 'blacklist', 'engine_name': 'ArcSight Threat Intelligence', 'category': 'undetected', 'result': 'unrated'}, 'AutoShun': {'method': 'blacklist', 'engine_name': 'AutoShun', 'category': 'undetected', 'result': 'unrated'}, 'Axur': {'method': 'blacklist', 'engine_name': 'Axur', 'category': 'undetected', 'result': 'unrated'}, 'benkow.cc': {'method': 'blacklist', 'engine_name': 'benkow.cc', 'category': 'harmless', 'result': 'clean'}, 'Bfore.Ai PreCrime': {'method': 'blacklist', 'engine_name': 'Bfore.Ai PreCrime', 'category': 'undetected', 'result': 'unrated'}, 'BitDefender': {'method': 'blacklist', 'engine_name': 'BitDefender', 'category': 'harmless', 'result': 'clean'}, 'Bkav': {'method': 'blacklist', 'engine_name': 'Bkav', 'category': 'undetected', 'result': 'unrated'}, 'BlockList': {'method': 'blacklist', 'engine_name': 'BlockList', 'category': 'harmless', 'result': 'clean'}, 'Blueliv': {'method': 'blacklist', 'engine_name': 'Blueliv', 'category': 'harmless', 'result': 'clean'}, 'Certego': {'method': 'blacklist', 'engine_name': 'Certego', 'category': 'harmless', 'result': 'clean'}, 'Chong Lua Dao': {'method': 'blacklist', 'engine_name': 'Chong Lua Dao', 'category': 'harmless', 'result': 'clean'}, 'CINS Army': {'method': 'blacklist', 'engine_name': 'CINS Army', 'category': 'harmless', 'result': 'clean'}, 'Snort IP sample list': {'method': 'blacklist', 'engine_name': 'Snort IP sample list', 'category': 'harmless', 'result': 'clean'}, 'Cluster25': {'method': 'blacklist', 'engine_name': 'Cluster25', 'category': 'undetected', 'result': 'unrated'}, 'CMC Threat Intelligence': {'method': 'blacklist', 'engine_name': 'CMC Threat Intelligence', 'category': 'harmless', 'result': 'clean'}, 'Xcitium Verdict Cloud': {'method': 'blacklist', 'engine_name': 'Xcitium Verdict Cloud', 'category': 'harmless', 'result': 'clean'}, 'CRDF': {'method': 'blacklist', 'engine_name': 'CRDF', 'category': 'harmless', 'result': 'clean'}, 'CSIS Security Group': {'method': 'blacklist', 'engine_name': 'CSIS Security Group', 'category': 'undetected', 'result': 'unrated'}, 'Cyan': {'method': 'blacklist', 'engine_name': 'Cyan', 'category': 'undetected', 'result': 'unrated'}, 'Cyble': {'method': 'blacklist', 'engine_name': 'Cyble', 'category': 'harmless', 'result': 'clean'}, 'CyRadar': {'method': 'blacklist', 'engine_name': 'CyRadar', 'category': 'harmless', 'result': 'clean'}, 'desenmascara.me': {'method': 'blacklist', 'engine_name': 'desenmascara.me', 'category': 'harmless', 'result': 'clean'}, 'DNS8': {'method': 'blacklist', 'engine_name': 'DNS8', 'category': 'harmless', 'result': 'clean'}, 'Dr.Web': {'method': 'blacklist', 'engine_name': 'Dr.Web', 'category': 'harmless', 'result': 'clean'}, 'Emsisoft': {'method': 'blacklist', 'engine_name': 'Emsisoft', 'category': 'harmless', 'result': 'clean'}, 'Ermes': {'method': 'blacklist', 'engine_name': 'Ermes', 'category': 'undetected', 'result': 'unrated'}, 'ESET': {'method': 'blacklist', 'engine_name': 'ESET', 'category': 'harmless', 'result': 'clean'}, 'ESTsecurity': {'method': 'blacklist', 'engine_name': 'ESTsecurity', 'category': 'harmless', 'result': 'clean'}, 'EmergingThreats': {'method': 'blacklist', 'engine_name': 'EmergingThreats', 'category': 'harmless', 'result': 'clean'}, 'Feodo Tracker': {'method': 'blacklist', 'engine_name': 'Feodo Tracker', 'category': 'harmless', 'result': 'clean'}, 'Fortinet': {'method': 'blacklist', 'engine_name': 'Fortinet', 'category': 'harmless', 'result': 'clean'}, 'G-Data': {'method': 'blacklist', 'engine_name': 'G-Data', 'category': 'harmless', 'result': 'clean'}, 'Google Safebrowsing': {'method': 'blacklist', 'engine_name': 'Google Safebrowsing', 'category': 'harmless', 'result': 'clean'}, 'GCP Abuse Intelligence': {'method': 'blacklist', 'engine_name': 'GCP Abuse Intelligence', 'category': 'undetected', 'result': 'unrated'}, 'GreenSnow': {'method': 'blacklist', 'engine_name': 'GreenSnow', 'category': 'harmless', 'result': 'clean'}, 'Gridinsoft': {'method': 'blacklist', 'engine_name': 'Gridinsoft', 'category': 'undetected', 'result': 'unrated'}, 'Heimdal Security': {'method': 'blacklist', 'engine_name': 'Heimdal Security', 'category': 'harmless', 'result': 'clean'}, 'Hunt.io Intelligence': {'method': 'blacklist', 'engine_name': 'Hunt.io Intelligence', 'category': 'undetected', 'result': 'unrated'}, 'IPsum': {'method': 'blacklist', 'engine_name': 'IPsum', 'category': 'harmless', 'result': 'clean'}, 'Juniper Networks': {'method': 'blacklist', 'engine_name': 'Juniper Networks', 'category': 'harmless', 'result': 'clean'}, 'Kaspersky': {'method': 'blacklist', 'engine_name': 'Kaspersky', 'category': 'harmless', 'result': 'clean'}, 'Lumu': {'method': 'blacklist', 'engine_name': 'Lumu', 'category': 'undetected', 'result': 'unrated'}, 'Malwared': {'method': 'blacklist', 'engine_name': 'Malwared', 'category': 'harmless', 'result': 'clean'}, 'MalwareURL': {'method': 'blacklist', 'engine_name': 'MalwareURL', 'category': 'undetected', 'result': 'unrated'}, 'MalwarePatrol': {'method': 'blacklist', 'engine_name': 'MalwarePatrol', 'category': 'harmless', 'result': 'clean'}, 'malwares.com URL checker': {'method': 'blacklist', 'engine_name': 'malwares.com URL checker', 'category': 'harmless', 'result': 'clean'}, 'Mimecast': {'method': 'blacklist', 'engine_name': 'Mimecast', 'category': 'undetected', 'result': 'unrated'}, 'Netcraft': {'method': 'blacklist', 'engine_name': 'Netcraft', 'category': 'undetected', 'result': 'unrated'}, 'OpenPhish': {'method': 'blacklist', 'engine_name': 'OpenPhish', 'category': 'harmless', 'result': 'clean'}, '0xSI_f33d': {'method': 'blacklist', 'engine_name': '0xSI_f33d', 'category': 'undetected', 'result': 'unrated'}, 'Phishing Database': {'method': 'blacklist', 'engine_name': 'Phishing Database', 'category': 'harmless', 'result': 'clean'}, 'PhishFort': {'method': 'blacklist', 'engine_name': 'PhishFort', 'category': 'undetected', 'result': 'unrated'}, 'PhishLabs': {'method': 'blacklist', 'engine_name': 'PhishLabs', 'category': 'undetected', 'result': 'unrated'}, 'Phishtank': {'method': 'blacklist', 'engine_name': 'Phishtank', 'category': 'harmless', 'result': 'clean'}, 'PREBYTES': {'method': 'blacklist', 'engine_name': 'PREBYTES', 'category': 'harmless', 'result': 'clean'}, 'PrecisionSec': {'method': 'blacklist', 'engine_name': 'PrecisionSec', 'category': 'undetected', 'result': 'unrated'}, 'Quick Heal': {'method': 'blacklist', 'engine_name': 'Quick Heal', 'category': 'harmless', 'result': 'clean'}, 'Quttera': {'method': 'blacklist', 'engine_name': 'Quttera', 'category': 'harmless', 'result': 'clean'}, 'Rising': {'method': 'blacklist', 'engine_name': 'Rising', 'category': 'harmless', 'result': 'clean'}, 'SafeToOpen': {'method': 'blacklist', 'engine_name': 'SafeToOpen', 'category': 'undetected', 'result': 'unrated'}, 'Sangfor': {'method': 'blacklist', 'engine_name': 'Sangfor', 'category': 'harmless', 'result': 'clean'}, 'Sansec eComscan': {'method': 'blacklist', 'engine_name': 'Sansec eComscan', 'category': 'undetected', 'result': 'unrated'}, 'Scantitan': {'method': 'blacklist', 'engine_name': 'Scantitan', 'category': 'harmless', 'result': 'clean'}, 'SCUMWARE.org': {'method': 'blacklist', 'engine_name': 'SCUMWARE.org', 'category': 'harmless', 'result': 'clean'}, 'Seclookup': {'method': 'blacklist', 'engine_name': 'Seclookup', 'category': 'harmless', 'result': 'clean'}, 'SOCRadar': {'method': 'blacklist', 'engine_name': 'SOCRadar', 'category': 'harmless', 'result': 'clean'}, 'Sophos': {'method': 'blacklist', 'engine_name': 'Sophos', 'category': 'harmless', 'result': 'clean'}, 'Spam404': {'method': 'blacklist', 'engine_name': 'Spam404', 'category': 'harmless', 'result': 'clean'}, 'StopForumSpam': {'method': 'blacklist', 'engine_name': 'StopForumSpam', 'category': 'harmless', 'result': 'clean'}, 'Sucuri SiteCheck': {'method': 'blacklist', 'engine_name': 'Sucuri SiteCheck', 'category': 'harmless', 'result': 'clean'}, 'securolytics': {'method': 'blacklist', 'engine_name': 'securolytics', 'category': 'harmless', 'result': 'clean'}, 'Threatsourcing': {'method': 'blacklist', 'engine_name': 'Threatsourcing', 'category': 'harmless', 'result': 'clean'}, 'ThreatHive': {'method': 'blacklist', 'engine_name': 
'ThreatHive', 'category': 'harmless', 'result': 'clean'}, 'Trustwave': {'method': 'blacklist', 'engine_name': 'Trustwave', 'category': 'harmless', 'result': 'clean'}, 'Underworld': {'method': 'blacklist', 'engine_name': 'Underworld', 'category': 'undetected', 'result': 'unrated'}, 'URLhaus': {'method': 'blacklist', 'engine_name': 'URLhaus', 'category': 'harmless', 'result': 'clean'}, 'URLQuery': {'method': 'blacklist', 'engine_name': 'URLQuery', 'category': 'harmless', 'result': 'clean'}, 'Viettel Threat Intelligence': {'method': 'blacklist', 'engine_name': 'Viettel Threat Intelligence', 'category': 'harmless', 'result': 'clean'}, 'VIPRE': {'method': 'blacklist', 'engine_name': 'VIPRE', 'category': 'undetected', 'result': 'unrated'}, 'ViriBack': {'method': 'blacklist', 'engine_name': 'ViriBack', 'category': 'harmless', 'result': 'clean'}, 'VX Vault': {'method': 'blacklist', 'engine_name': 'VX Vault', 'category': 'harmless', 'result': 'clean'}, 'Webroot': {'method': 'blacklist', 'engine_name': 'Webroot', 'category': 'harmless', 'result': 'clean'}, 'Forcepoint ThreatSeeker': {'method': 'blacklist', 'engine_name': 'Forcepoint ThreatSeeker', 'category': 'harmless', 'result': 'clean'}, 'Yandex Safebrowsing': {'method': 'blacklist', 'engine_name': 'Yandex Safebrowsing', 'category': 'harmless', 'result': 'clean'}, 'ZeroCERT': {'method': 'blacklist', 'engine_name': 'ZeroCERT', 'category': 'harmless', 'result': 'clean'}, 'ZeroFox': {'method': 'blacklist', 'engine_name': 'ZeroFox', 'category': 'undetected', 'result': 'unrated'}}, 'categories': {'BitDefender': 'entertainment', 'Sophos': 'video hosting', 'Forcepoint ThreatSeeker': 'streaming media'}, 
'last_analysis_stats': {'malicious': 0, 'suspicious': 0, 'undetected': 27, 'harmless': 70, 'timeout': 0}, 
'html_meta': {'keywords': ['watch movies, movies online, watch TV, TV online, TV shows online, watch TV shows, stream movies, stream tv, instant streaming, watch online, movies, watch movies United States, watch TV online, no download, full length movies'], 
'description': ['Watch Netflix movies & TV shows online or stream right to your smart TV, game console, PC, Mac, mobile, tablet and more.'], 
'viewport': ['width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0'], 'apple-mobile-web-app-capable': ['yes'], 'apple-mobile-web-app-status-bar-style': ['black'], 'format-detection': ['telephone=no'], 'apple-touch-icon': ['https://assets.nflxext.com/en_us/layout/ecweb/netflix-app-icon_152.jpg'], 'og:description': ['Watch Netflix movies & TV shows online or stream right to your smart TV, game console, PC, Mac, mobile, tablet and more.'], 'al:ios:url': ['nflx://www.netflix.com/'], 'al:ios:app_store_id': ['363590051'], 'al:ios:app_name': ['Netflix'], 'al:android:url': ['nflx://www.netflix.com/'], 'al:android:package': ['com.netflix.mediaclient'], 'al:android:app_name': ['Netflix'], 'twitter:card': ['summary_large_image'], 'twitter:site': ['@netflix']}, 'first_submission_date': 1391200393, 'url': 'https://www.netflix.com/', 'outgoing_links': ['https://policies.google.com/terms', 'https://fast.com', 'https://policies.google.com/privacy'], 'last_http_response_code': 200, 'reputation': 53, 'last_analysis_date': 1748435343, 'last_http_response_headers': {'server': 'envoy', 'x-frame-options': 'DENY', 'content-security-policy-report-only': "default-src https: wss: 'unsafe-inline' 'unsafe-eval'; font-src https: data: ; img-src  https: data: blob: ; media-src https: blob: ; 
worker-src https: blob: ; report-uri https://www.netflix.com/log/www/csp/1;", 'accept-ch': 'Sec-CH-UA-Platform-Version,Sec-CH-UA-Model', 'cache-control': 'no-cache, no-store, must-revalidate', 'pragma': 'no-cache', 'expires': '0', 'x-robots-tag': 'index', 'x-netflix.request.growth.session.id': '41da9751-54d3-4237-ad03-d76dcb7dbaa0', 'Content-Type': 'text/html; charset=utf-8', 'date': 'Wed, 28 May 2025 12:29:05 GMT', 'x-envoy-upstream-service-time': '324', 'x-b3-traceid': '6837019181ce732aed02a30c7b4c1f87', 'x-request-id': '4ff4d959-77d0-40df-94aa-90e37c8fde90', 'x-envoy-decorator-operation': 'lo_svc', 'Via': '1.1 i-0cda720943c4c2b9b (us-east-2)', 'X-Xss-Protection': '1; mode=block; report=https://www.netflix.com/ichnaea/log/freeform/xssreport', 'X-Content-Type-Options': 'nosniff', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains', 'X-Originating-URL': 'http://www.netflix.com/', 'x-netflix-cookieandmsl.profileguid.match': 'NA', 'x-netflix-headerandcookie.profileguid.match': 'NA', 'x-netflix-headerandmsl.profileguid.match': 'NA', 'X-Netflix.nfstatus': '1_1', 'X-Netflix.proxy.execution-time': '359', 'Set-Cookie': 'flwssn=4070aa50-2583-46e7-8b58-ed4d73379f9d; Max-Age=10800; Domain=.netflix.com; Path=/, nfvdid=BQFmAAEBEBsPmxfyHkPZaSUvBWspzj5AGGwiqzMtWx61YxT0puKIup4TiKAaH8CkRhCqkg78l29weVaYt08TiT6ol-PCevHFXaKhb3MfyA1KhD-259SEPw%3D%3D; Domain=.netflix.com; Path=/; Max-Age=31536000, SecureNetflixId=v%3D3%26mac%3DAQEAEQABABS_gDHMJbAq2rs81tQOuYXc3tEXVOavhCQ.%26dt%3D1748435345357; Domain=.netflix.com; Expires=Thu, 28 May 2026 12:29:05 GMT; Path=/; HttpOnly; Secure; SameSite=Strict, NetflixId=v%3D3%26ct%3DBgjHlOvcAxLBAdtqd491kvq1reAEN-RDsFOsISu2kZCgdF4UiSYNTPAa8p7mvl36flYytgOuOOSszd0l6tAoP3dOim6qEwixTAU32NFQ143J0ENoL77Y_QUfb1aVD1-zi5pjJ3StnPryjAOI8jcfYeF_znABuFgTxBWPkpEJJ1K2TDLCaFnuud8sXv5xxzOwt5g5RovkWWkxNUTY5ShogkXMv013Ja1OF__TnCe0xZrmhe_gq92NSfjFy-E23rqKVkN6O5-uRUQQE8YYBiIOCgzK3LDOfeA5u7LJESg.; Domain=.netflix.com; Expires=Thu, 28 May 2026 12:29:05 GMT; Path=/; HttpOnly; Secure; SameSite=Lax, gsid=41da9751-54d3-4237-ad03-d76dcb7dbaa0; Max-Age=86400; Expires=Thu, 29 May 2025 12:29:05 GMT; Path=/; Domain=.netflix.com; Secure; HTTPOnly; SameSite=None', 'X-Netflix.zuul.netty.content.compressor.target': 'gzip', 'transfer-encoding': 'chunked'}, 'tags': ['third-party-cookies', 'iframes', 'external-resources'], 'last_http_response_content_sha256': '38a5ee36e4b335a809720fb2a330dccc8ffcf35e06d0c9b8e86b0089e1b40631', 'tld': 'com', 'last_final_url': 'https://www.netflix.com/', 'threat_names': [], 'last_modification_date': 1748435371, 'last_http_response_cookies': {'flwssn': '4070aa50-2583-46e7-8b58-ed4d73379f9d', 'nfvdid': 'BQFmAAEBEBsPmxfyHkPZaSUvBWspzj5AGGwiqzMtWx61YxT0puKIup4TiKAaH8CkRhCqkg78l29weVaYt08TiT6ol-PCevHFXaKhb3MfyA1KhD-259SEPw%3D%3D', 'SecureNetflixId': 'v%3D3%26mac%3DAQEAEQABABS_gDHMJbAq2rs81tQOuYXc3tEXVOavhCQ.%26dt%3D1748435345357', 'NetflixId': 'v%3D3%26ct%3DBgjHlOvcAxLBAdtqd491kvq1reAEN-RDsFOsISu2kZCgdF4UiSYNTPAa8p7mvl36flYytgOuOOSszd0l6tAoP3dOim6qEwixTAU32NFQ143J0ENoL77Y_QUfb1aVD1-zi5pjJ3StnPryjAOI8jcfYeF_znABuFgTxBWPkpEJJ1K2TDLCaFnuud8sXv5xxzOwt5g5RovkWWkxNUTY5ShogkXMv013Ja1OF__TnCe0xZrmhe_gq92NSfjFy-E23rqKVkN6O5-uRUQQE8YYBiIOCgzK3LDOfeA5u7LJESg.', 'gsid': '41da9751-54d3-4237-ad03-d76dcb7dbaa0'}, 'redirection_chain': ['https://www.netflix.com/'], 'title': 'Netflix - Watch TV Shows Online, Watch Movies Online'}}}

"""


def vt_get_url_report(analysis_id):
    analysis_id = analysis_id.split("-")[1]
    url = f"{VT_URL}/{analysis_id}"
    print(f"getting analysis_id status: {analysis_id}")
    while True:
        response = requests.get(url, headers=HEADERS)
        response.raise_for_status()
        json_data = response.json()
        attributes = json_data.get('data').get('attributes')
        if attributes:
            verdict = attributes.get('total_votes')
            return verdict
        else:
            time.sleep(20)
        

def main():
    try:
        url = "https://www.netflix.com" # hard-coded for testing
        print(f"Scanning URL: {url}")
        analysis_id = vt_scan_url(url)
        print(f"Analysis ID: {analysis_id}")

        report = vt_get_url_report(analysis_id)
        print("Scan completed. Report summary:")
        print(report)

    except Exception as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    main()
